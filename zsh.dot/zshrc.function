# Useful functions
# ---------------------------------------------------**
function agvim() {
  local output

  if output=$(ag "$@"); then
    local result=$(echo $output | peco --query "$LBUFFER")

    if [[ ! $result == '' ]]; then
      echo $result | awk -F : '{print "-c " $2 " " $1}' >> $HOME/.agvim_history
      vim $(tail -n 1 "$HOME"/.agvim_history)
    fi
  else
    echo $output
  fi
}

function _change-repository() {
  local result=$(ghq list -p | peco)

  if [[ ! "$result" == '' ]]; then
    cd "$result"
  fi
}

function _peco-select-history() {
  if ! command_exists tac; then
    warn "  x [Warning] tac is not installed"
    return 1
  fi

  local BUFFER=$(\history -n 1 | \
    tac | \
    peco --query "$LBUFFER")
  CURSOR="$#BUFFER"

  zle clear-screen
}

function _peco-select-project() {
  if command_not_exists tmuxinator; then
    fail '  x [Warning] The Tmuxinator is not installed'; return 1
  fi

  local LF=$(printf '\\\012_')
  local LF=${LF%_}
  local project=$(
    tmuxinator list | \
    tail -n 1 | \
    sed -e 's/ /'"$LF"'/g' | \
    grep -v '^\s*$' | \
    peco
  )

  tmuxinator "$project"
}

function _change-branch() {
  local branch=$(git branch | grep -v -o "*" | sed -e 's/ //g' | peco)
  git checkout $branch &> /dev/null
  printf "Switched to branch '$branch'"

  zle accept-line
}

function python-listup() {
  pyenv install --list | peco | sed -e 's/^  *//g' | tr -d '\n" "' C
  succeed "  + Copied to the clipboard"
}

function ruby-listup() {
  rbenv install --list | peco | sed -e 's/^  *//g' | tr -d '\n" "' C
  succeed "  + Copied to the clipboard"
}

function ec() {
  git commit -m "Execute '$@'"
}

function _peco-find-and-open-file () {
  local files=$(find . | fgrep -v '.git' | fgrep -v './vendor/bundle'| peco)
  if [[ ! $files == '' ]]; then
    echo $files | xargs zsh -c 'nvim "$0" < /dev/tty'
  fi

  zle clear-screen
}

# Set zle
# ---------------------------------------------------**
zle -N _peco-select-history
zle -N _change-branch
zle -N _peco-find-and-open-file

# Bind functions
# ---------------------------------------------------**
bindkey '^r' _peco-select-history
bindkey '^{' _change-branch
bindkey '^_' undo
bindkey '^x' _peco-find-and-open-file

# Alias functions
# ---------------------------------------------------**
alias p='_peco-select-project'
alias c='_change-repository'

# Useful functions
# ---------------------------------------------------**
function agvim() {
  local output

  if output=$(ag "$@"); then
    echo $output | peco --query "$LBUFFER" | awk -F : '{print "-c " $2 " " $1}' >> $HOME/.agvim_history
    vim $(tail -n 1 $HOME/.agvim_history)
  else
    echo $output
  fi
}

function cr() {
  local result=$(ghq list -p | peco)

  if [[ ! $result == '' ]]; then
    cd $result
  fi

  zle accept-line
  zle clear-screen
}

function peco-select-history() {
  if ! command_exists tac; then
    warn "  x [Warning] tac is not installed"
    return 1
  fi

  local BUFFER=$(\history -n 1 | \
    tac | \
    peco --query "$LBUFFER")
  CURSOR=$#BUFFER

  zle clear-screen
}

function change-branch() {
  local branch=$(git branch | grep -v -o "*" | sed -e 's/ //g' | peco)
  git checkout $branch &> /dev/null
  printf "Switched to $branch"

  zle accept-line
}

function python-listup() {
  pyenv install --list | peco | sed -e 's/^  *//g' | tr -d '\n" "' C
  succeed "  + Copied to the clipboard"
}

function ruby-listup() {
  rbenv install --list | peco | sed -e 's/^  *//g' | tr -d '\n" "' C
  succeed "  + Copied to the clipboard"
}

function ec() {
  git commit -m "Execute '$@'"
}

# Set zle
# ---------------------------------------------------**
zle -N peco-select-history
zle -N change-branch
zle -N cr

# Bind functions
# ---------------------------------------------------**
bindkey '^r' peco-select-history
bindkey '^s' cr
bindkey '^{' change-branch
bindkey '^_' undo
